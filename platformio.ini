; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; default_envs=generic_g431b
default_envs=pico
; default_envs=picow
;generic_g431b
lib_dir=
	../lib

[env]
framework = arduino
monitor_speed=115200
lib_archive = false
lib_deps =
	../lib/can2040
	../lib/SimpleCanLib
	../lib/MsgPack

[env:pico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git	; needed until merge - https://github.com/platformio/platform-raspberrypi/pull/36
board = pico
board_build.core = earlephilhower	; @3.9.5 was the last version using the v1 pico sdk
; monitor_speed = 115200
; monitor_flags = 
; 	--eol
; 	LF
lib_archive = false
; if using picoprobe SWD upload / debugging
upload_protocol = cmsis-dap
debug_tool = cmsis-dap
build_flags = 
	; -D RESPOND_ONLY
	; -D CONTROLTEST
	-D PIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
	-D PICO
	-D BRAIN
	-D DUAL
	-D BAUDRATE=115200
	-I../lib/SimpleCanLib
	; -I../lib/can2040
lib_ldf_mode = chain+
; lib_ldf_mode = deep+
; lib_ldf_mode = off
lib_deps =
	../lib/can2040
	../lib/SimpleCanLib
	MsgPack
; 	; https://github.com/KevinOConnor/can2040.git#v1.6.0

[env:picow]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git	; needed until merge - https://github.com/platformio/platform-raspberrypi/pull/36
board = rpipicow
; board_build.core = earlephilhower
build_flags = 
	-D RESPOND_ONLY
	-D PIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
	-D PICO
	-D BAUDRATE=115200
	-I../lib/SimpleCanLib
	-I../lib/can2040
lib_ldf_mode = chain+
lib_deps =
	../lib/can2040
	../lib/SimpleCanLib
	MsgPack

[env:disco_b_g431b_esc1]
platform = ststm32
board = disco_b_g431b_esc1
framework = arduino
upload_protocol = stlink
debug_tool = stlink
monitor_speed = 115200
monitor_eol = LF
lib_archive = false
build_flags = 
	; -D HAL_FDCAN_MODULE_ENABLED
	-D PIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
	-D BAUDRATE=115200
	; -D RESPOND_ONLY
	; -D SERIAL_UART_INSTANCE=1	# ?
	-I../lib/SimpleCanLib
;upload_port = COM8
; lib_dir = ../lib

;[env:ESP32-devkit-v4]
;platform = espressif32
;board = az-delivery-devkit-v4
;framework = arduino
;monitor_speed = 115200
;monitor_eol = LF

;build_flags = 
;	-D PIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
;	-D ESP32
;	-D BAUDRATE=115200
;	-I../lib/SimpleCanLib
;upload_protocol = espota
;upload_port = 10.10.10.132


[env:generic_g431b]
platform = ststm32
board = genericSTM32G431CB
upload_protocol = stlink
debug_tool = stlink
; monitor_speed = 115200
monitor_eol = LF
lib_archive = false
build_flags = 
	; -D RESPOND_ONLY
	-D ARDUINO_GENERIC_G431CBUX
	-D STM32G4xx
	; -D BG431B
	; -D _STM32_DEF_
	-D HAL_FDCAN_MODULE_ENABLED
	-D PIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
	-D BAUDRATE=115200
	-D SERIAL_UART_INSTANCE=3  # configure default serial object
	-D PIN_SERIAL_RX=PB11 # configure default serial rx/tx
	-D PIN_SERIAL_TX=PB10
; 	-I../lib/SimpleCanLib
; upload_port = COM4
; lib_dir = ../lib

